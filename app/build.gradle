apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

apply plugin: 'org.jetbrains.dokka-android'

android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'
    defaultConfig {
        applicationId "com.bitage.kapp"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "com.bitage.kapp.runner.KApplicationRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    dataBinding {
        enabled true
    }

    lintOptions {
        abortOnError true
        ignoreWarnings false
        warningsAsErrors true
    }
}

configurations {
    ktlint
}

dependencies {
    implementation project(':data')
    implementation project(':presentation')

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation supportDependencies.appCompatV7
    implementation supportDependencies.design
    implementation supportDependencies.constraintLayout
    implementation kotlinDependencies.kotlin
    implementation androidComponentDependencies.archRuntime
    implementation androidComponentDependencies.archExtensions
    implementation androidComponentDependencies.roomRuntime
    implementation daggerDependencies.core
    implementation daggerDependencies.android
    implementation daggerDependencies.androidSupport

    kapt androidComponentDependencies.roomCompiler
    kapt daggerDependencies.compiler
    kapt daggerDependencies.processor
    compileOnly kotlinDependencies.javaxAnnotation

    ktlint kotlinDependencies.ktlint

    testImplementation testDependencies.junit
    kaptAndroidTest daggerDependencies.compiler
    androidTestImplementation(testDependencies.espressoCore, {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
}

dokka {
    outputFormat = 'html'
    outputDirectory = "$buildDir/javadoc"
    skipEmptyPackages = true
    reportUndocumented = true
}

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    main = "com.github.shyiko.ktlint.Main"
    classpath = configurations.ktlint
    args "src/**/*.kt"
    // to generate report in checkstyle format prepend following args:
    // "--reporter=plain", "--reporter=checkstyle,output=${buildDir}/ktlint.xml"
    // see https://github.com/shyiko/ktlint#usage for more
}
check.dependsOn ktlint

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    main = "com.github.shyiko.ktlint.Main"
    classpath = configurations.ktlint
    args "-F", "src/**/*.kt"
}
